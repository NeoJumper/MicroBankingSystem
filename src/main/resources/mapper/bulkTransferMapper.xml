<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.bulk_transfer.mapper.BulkTransferMapper">



    <select id="findNextBulkTransferId">
        SELECT  bulk_transfer_seq.NEXTVAL FROM dual
    </select>


    <select id="findBulkTransferList" parameterType="BulkTransferSearch">
        SELECT *
        FROM (
            SELECT ROWNUM rn, id, registration_date, amount, status, success_cnt, failure_cnt, total_cnt, description
            FROM (
                SELECT
                    id,
                    registration_date,
                    amount,
                    status,
                    success_cnt,
                    failure_cnt,
                    success_cnt + failure_cnt as total_cnt,
                    description
                FROM Bulk_Transfer
                <where>
                    <!-- 계좌번호 조회 -->
                    <if test="accId != null and accId != ''">
                        acc_id LIKE #{accId} || '%'
                    </if>
                    <!-- 날짜 직접 입력 검색 -->
                    <if test="startDate != null and endDate != null">
                        AND trade_date BETWEEN #{startDate} AND #{endDate}
                    </if>
                </where>
                <!-- 정렬 기준 -->
                <choose>
                    <when test="sortOrder == 'latest'">
                        ORDER BY trade_date DESC
                    </when>
                    <when test="sortOrder == 'oldest'">
                        ORDER BY trade_date ASC
                    </when>
                </choose>
            )
        )
        WHERE rn BETWEEN #{criteria.amount} * (#{criteria.pageNum} - 1) + 1 AND #{criteria.amount} * #{criteria.pageNum}

    </select>


    <select id="findBulkTransfer" parameterType="java.lang.Long">

        SELECT
        ROWNUM rn,
        bt.acc_id,
        bt.id,
        bt.registration_date,
        e.name as registrant_name,
        bt.amount,
        bt.status,
        bt.success_cnt,
        bt.failure_cnt,
        bt.success_cnt + bt.failure_cnt as total_cnt,
        description
        FROM Bulk_Transfer bt
        JOIN EMPLOYEE e ON bt.registrant_id = e.id
        WHERE bt.id = #{bulkTransferId}

    </select>


    <insert id="insertBulkTransfer" parameterType="BulkTransferCreate">
        INSERT INTO Bulk_Transfer
        (
            id,
            registrant_id,
            acc_id,
            branch_id,
            trade_date,
            amount,
            success_cnt,
            failure_cnt,
            status,
            <if test="description != null and description != ''">
            description,
            </if>
            registration_date,
            version
        )
        VALUES
        (
            bulk_transfer_seq.nextval,
            #{registrantId},
            #{accId},
            #{branchId},
            #{tradeDate},
            #{amount},
            #{successCnt},
            #{failureCnt},
            #{status},
            <if test="description != null and description != ''">
            #{description},
            </if>
            SYSTIMESTAMP,
            1
        )
    </insert>
</mapper>
