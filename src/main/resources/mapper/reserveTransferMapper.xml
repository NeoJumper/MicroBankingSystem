<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.reserve_transfer.mapper.ReserveTransferMapper">



    <insert id="createReserveTransfer" parameterType="ReserveTransferCreate">

        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
        SELECT reserve_transfer_seq.nextval FROM dual
        </selectKey>

        INSERT INTO Reserve_transfer (
            id,
            acc_id,
            target_acc_id,
            <if test="bulkTransferId != null and !bulkTransferId.equals('')">
                bulk_transfer_id,
            </if>
            amount,
            transfer_date,
            transfer_start_time,
            transfer_end_time,
            retry_count,
            transfer_type,
            description,
            status,
            <if test="failureReason != null and !failureReason.equals('')">
                failure_reason,
            </if>
            registrant_id,
            branch_id,
            registration_date,
            version

        ) VALUES (
            #{id},
            #{accId},
            #{targetAccId},
            <if test="bulkTransferId != null and !bulkTransferId.equals('')">
                #{bulkTransferId},
            </if>
            #{amount},
            #{transferDate},
            #{transferStartTime},
            #{transferEndTime},
            #{retryCount},
            #{transferType},
            #{description},
            #{status},
            <if test="failureReason != null and !failureReason.equals('')">
                #{failureReason},
            </if>
            #{registrantId},
            #{branchId},
            SYSTIMESTAMP,
            1
        )
    </insert>

    <select id="getPendingTransfers" parameterType="SearchReserve" resultType="TransferTradeCreate">

        select
            rt.id as reserve_transfer_id,
            rt.acc_id as acc_id ,
            rt.target_acc_id as targetAccId,
            rt.amount as transfer_amount,
            a.password as accountPassword,
            rt.transfer_start_time as transfer_start_time,
            rt.transfer_end_time as transfer_end_time,
            rt.retry_count as retry_count,
            rt.status as status,
            rt.transfer_date as transfer_date,
            auto.missed_count AS missed_count

        from reserve_transfer rt
        join account a
        on a.id = rt.acc_id
        join auto_transfer auto
        on rt.acc_id = auto.acc_id
        WHERE
            TO_CHAR(transfer_date, 'YY/MM/DD') = TO_CHAR(SYSTIMESTAMP, 'YY/MM/DD')
          AND
            rt.status = #{status}
          AND
            TO_DATE(TO_CHAR(SYSTIMESTAMP, 'HH24:MI'), 'HH24:MI')
                BETWEEN TO_DATE(transfer_start_time, 'HH24:MI')
                AND TO_DATE(transfer_end_time, 'HH24:MI')
    </select>

    <update id="updateTransferStatus">
        UPDATE reserve_transfer
        SET status = #{status},
        failure_reason =
        <if test="failureReason != null and failureReason != ''">
            #{failureReason}
        </if>
        WHERE id = #{reserveTransferId}
    </update>


    <insert id="insertScheduledAutoTransfer" parameterType="ReserveTransferCreate">
        INSERT INTO reserve_transfer (
        id,
        acc_id,
        target_acc_id,
        amount,
        transfer_date,
        retry_count,
        transfer_type,
        description,
        status,
        failure_reason,
        registrant_id,
        branch_id,
        registration_date,
        version,
        auto_transfer_id
        ) VALUES (
        reserve_transfer_seq.nextval,
        #{accId},
        #{targetAccId},
        #{amount},
        SYSTIMESTAMP,
        0,
        'AUTO',
        #{description},
        #{status},
        'x',  <!-- NULL이 아닐 때만 삽입 -->
        #{registrantId},
        #{branchId},
        SYSTIMESTAMP,
        1,
        #{autoTransferId}
        )
    </insert>

</mapper>
