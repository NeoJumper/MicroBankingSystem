<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.interest.mapper.InterestMapper">


    <!--    계좌번호로 미지급 이자,미지급 이자율 총합-->
    <select id="findInterestSum" parameterType="java.lang.String">
        SELECT acc_id AS account_id,
        sum(amount) AS amount_sum
        FROM Interest
        WHERE acc_id = #{accountId} AND payment_status = 'N'
        GROUP BY acc_id
    </select>

    <!--  되돌려야할 이자액 합계  -->
    <select id="findRollbackInterestSum" parameterType="AccountIdWithExpireDate">
        SELECT acc_id AS account_id,
        sum(amount) AS amount_sum
        FROM Interest
        WHERE acc_id = #{accountId} AND modifier_date = #{expireDate}
        GROUP BY acc_id
    </select>


    <insert id="save" parameterType="EmployeeCreate">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
            SELECT employee_seq.nextval FROM dual
        </selectKey>
        INSERT INTO Employee (id, branch_id, name, phone_number, email,birth_date, password, roles)
        VALUES (#{id}, #{branchId}, #{name},  #{phoneNumber}, #{email},#{birthDate}, #{password}, #{roles})
    </insert>

    <insert id="createInterest" parameterType="InterestCreate">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
            SELECT interest_seq.nextval FROM dual
        </selectKey>


        INSERT INTO interest (
        id, acc_id, branch_id, amount, interest_rate, payment_status, trade_number, registrant_id, registration_date, version
        ) VALUES (
        #{id},
        #{accId, jdbcType=VARCHAR},
        #{branchId, jdbcType=BIGINT},
        #{amount, jdbcType=DECIMAL},
        #{interestRate, jdbcType=FLOAT},
        #{paymentStatus, jdbcType=VARCHAR},
        #{tradeNumber, jdbcType=BIGINT},
        #{registrantId, jdbcType=BIGINT},
        #{registrationDate},
        #{version}
        )
    </insert>

    <!--    이자 테이블 상태 변경-->
    <update id="updatePaymentStatus" parameterType="PaymentStatus">
        UPDATE INTEREST
        SET
        branch_id = #{branchId},
        payment_date = #{payDate},
        payment_status = 'Y',
        modifier_date = SYSDATE,
        modifier_id = #{modifierId},
        version = version + 1
        WHERE
        acc_id = #{accId}
        AND
        payment_status = 'N'
    </update>

    <update id="rollbackPaymentStatus" parameterType="RollbackPaymentStatus">
        UPDATE INTEREST
        SET
        branch_id = #{branchId},
        payment_date = NULL,
        payment_status = 'N',
        modifier_date = SYSDATE,
        modifier_id = #{modifierId},
        version = version + 1
        WHERE
        acc_id = #{accId}
        AND
        modifier_date = #{expireDate}
    </update>

</mapper>
