<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.account.mapper.AccountMapper">

    <select id="findPasswordByAccNumber" parameterType="String">
        SELECT
            a.password AS accountNumber
        FROM
            Account a
        WHERE a.id = #{accountNumber}
    </select>

    <resultMap id="AccountAllResultMap" type="AccountDetail">
        <id property="id" column="id" />
        <result property="branchId" column="branch_id" />
        <result property="customerId" column="customer_id" />
        <result property="productId" column="product_id" />
        <result property="registrantId" column="registrant_id" />
        <result property="startDate" column="start_date" />
        <result property="preferentialInterestRate" column="preferential_interest_rate" />
        <result property="expireDate" column="expire_date" />
        <result property="password" column="password" />
        <result property="balance" column="balance" />
        <result property="openDate" column="open_date" />
        <result property="status" column="status" />
        <result property="tradeNumber" column="trade_number" />
        <result property="registrationDate" column="registration_date" />
        <result property="registrant" column="registrant" />
        <result property="modificationDate" column="modification_date" />
        <result property="modifierId" column="modifier_id" />
        <result property="version" column="version" />
    </resultMap>

    <resultMap id="AccountModalResultMap" type="AccountOfModal">
        <result property="accId" column="acc_id" />
        <result property="openDate" column="open_date" />
        <result property="status" column="status" />
        <result property="customerName" column="customer_name" />
        <result property="productName" column="product_name" />
        <result property="balance" column="balance" />
    </resultMap>

    <resultMap id="AccountProductInfoMap" type="AccountProductInfo">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="interestRate" column="interest_rate" />
    </resultMap>

    <select id="findAll" resultMap="AccountAllResultMap">
        SELECT * FROM account
    </select>

    <select id="findAccountProductInfo" resultMap="AccountProductInfoMap" >
        select * from product
        where id = 1
    </select>

    <select id="getAccountSeq" resultType="int">
        SELECT account_seq.NEXTVAL
        FROM dual
    </select>

    <insert id="openAccount" parameterType="AccountCreate">
        INSERT INTO Account
        (
            id,
            branch_id,
            customer_id,
            product_id,
            registrant_id,

            start_date,
            preferential_interest_rate,
            password,
            balance,
            open_date,

            status,
            registration_date,
            trade_number,
            version

        ) VALUES
        (
             #{id},
             #{branchId},
             #{customerId},
             #{productId},
             #{registrantId},

             SYSDATE,
             #{preferentialInterestRate},
             #{password},
             #{balance},
             #{startDate},

             'OPN',
             SYSTIMESTAMP,
             TRADE_SEQ.nextval,
             1

         )
    </insert>


    <select id="findAccountsBySearchOption" resultMap="AccountModalResultMap">
        SELECT
        a.id AS acc_id,
        a.open_date AS open_date,
        a.status,
        c.name AS customer_name,
        p.name AS product_name,
        a.balance AS balance
        FROM
        Account a
        JOIN
        Customer c ON a.customer_id = c.id
        JOIN
        Product p ON a.product_id = p.id
        <where>
        <if test="status != null and !status.equals('')">
            a.status = #{status}
        </if>
        <if test="accId != null and !accId.equals('')">
            AND a.id LIKE #{accId} || '%'
        </if>
        <if test="productName != null and !productName.equals('')">
            AND p.name LIKE #{productName} || '%'
        </if>
        </where>
    </select>


    <resultMap id="AccountOpenModalResultMap" type="AccountOpenResultOfModal">
        <result property="accId" column="acc_id" />
        <result property="password" column="password" />
        <result property="customerName" column="customer_name" />
        <result property="customerId" column="customer_id" />
        <result property="phoneNumber" column="phone_number" />
        <result property="productName" column="product_name" />
        <result property="startDate" column="start_date" />
        <result property="balance" column="balance" />
        <result property="branchName" column="branch_name" />
        <result property="registrantName" column="registrant_name" />
        <result property="preferentialInterestRate" column="preferential_interest_rate" />
        <result property="interestRate" column="interest_rate" />
        <result property="totalInterestRate" column="total_interest_rate" />
    </resultMap>

    <select id="findAccountOpenResultOfModal" resultMap="AccountOpenModalResultMap">
        SELECT
            a.id AS acc_id,
            a.password AS password,
            c.name AS customer_name,
            c.id AS customer_id,
            c.phone_number AS phone_number,
            p.name AS product_name,
            a.start_date AS start_date,
            a.balance AS balance,
            b.name AS branch_name,
            e.name AS registrant_name,
            a.preferential_interest_rate AS preferential_interest_rate,
            p.interest_rate AS interest_rate,
            (a.preferential_interest_rate +p.interest_rate) AS total_interest_rate
        FROM
            Account a
                JOIN
            Customer c ON a.customer_id = c.id
                JOIN
            Product p ON a.product_id = p.id
                JOIN
            Branch b ON a.branch_id = b.id
                JOIN
            EMPLOYEE e ON a.registrant_id = e.id
        WHERE a.id = #{accId}
    </select>

    <select id="getAccountDetail" resultType="AccountDetail">
        SELECT
            a.id AS id,
            a.branch_id AS branchId,
            a.customer_id AS customerId,
            a.product_id AS productId,
            a.registrant_id AS registrantId,
            a.start_date AS startDate,
            a.preferential_interest_rate AS preferentialInterestRate,
            a.expire_date AS expireDate,
            a.password AS password,
            a.balance AS balance,
            a.open_date AS openDate,
            a.status AS status,
            a.trade_number AS tradeNumber,
            a.registration_date AS registrationDate,
            a.modification_date AS modificationDate,
            a.modifier_id AS modifierId,
            a.version AS version,
            c.name AS customerName
        FROM Account a
                 JOIN Customer c ON a.customer_id = c.id
        WHERE a.id = #{accountId}
    </select>


    <select id="findAccountByBranchId" parameterType="Long">
        SELECT
        ac.id as acc_id,
        ac.branch_id,
        ac.product_id,
        ac.registrant_id,
        ac.preferential_interest_rate + p.interest_rate as interest_rate,
        ac.balance
        FROM account ac
        JOIN product p ON ac.product_id = p.id
        WHERE ac.branch_id = #{branchId}
    </select>

    <!--    계좌 상태 변경-->
    <update id="updateStatus" parameterType="AccountStatus">
        UPDATE ACCOUNT
        SET
        status = #{status},
        balance = #{balance},
        modification_date = SYSDATE,
        modifier_id = #{modifierId},
        version = version + 1
        <if test="businessDay != null">
            , expire_date = #{businessDay}
        </if>
        <if test="businessDay == null">
            , expire_date = null
        </if>
        WHERE
        id = #{id}
    </update>

    <!--    해지 대상 계좌 상태 조회-->
    <resultMap id="closeAccountMap" type="CloseAccount">
        <id column="account_id" property="accountId" />
        <result column="account_status" property="accountStatus" />
        <result column="customer_name" property="customerName" />
        <result column="customer_id" property="customerId" />
        <result column="product_name" property="productName" />
        <result column="amount_date" property="amountDate" />
        <result column="account_pre_inter_rate" property="accountPreInterRate" />
        <result column="product_inter_rate" property="productInterRate" />
        <result column="account_bal" property="accountBal" />
        <result column="product_tax_rate" property="productTaxRate" />
    </resultMap>


    <select id="findCloseAccount" parameterType="java.lang.String" resultMap="closeAccountMap">
        SELECT
        a.id as account_id,
        a.status as account_status,
        c.name as customer_name,
        c.id as customer_id,
        p.name as product_name,
        a.start_date as amount_date,
        a.preferential_interest_rate as account_pre_inter_rate,
        p.interest_rate as product_inter_rate,
        a.balance as account_bal,
        p.tax_rate as product_tax_rate
        FROM Account a JOIN Customer c ON a.customer_id = c.id
        JOIN Product p ON a.product_id = p.id
        WHERE a.id = #{accountId}
    </select>

    <!-- 계좌 해지일 조회 -->
    <select id="findExpireDateById" parameterType="java.lang.String" resultType="java.sql.Timestamp">
        SELECT expire_date
        FROM ACCOUNT
        WHERE id = #{id}
    </select>

</mapper>