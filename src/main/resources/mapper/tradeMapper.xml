<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.trade.mapper.TradeMapper">

    <resultMap id="TradeOfListMap" type="TradeOfList">
        <result property="tradeDate" column="trade_date" />
        <result property="accId" column="acc_id" />
        <result property="targetAccId" column="target_acc_id" />
        <result property="tradeType" column="trade_type" />
        <result property="cashIndicator" column="cash_indicator" />
        <result property="amount" column="amount" />
        <result property="balance" column="balance" />
        <result property="status" column="status"/>
    </resultMap>

    <select id="findTradeListOfAccId" parameterType="TradeSearch" resultMap="TradeOfListMap">
        SELECT *
        FROM (
            SELECT ROWNUM rn, trade_date, acc_id, target_acc_id, trade_type, cash_indicator, amount, balance, status
            FROM (
                SELECT
                    trade_date,
                    acc_id,
                    target_acc_id,
                    trade_type,
                    cash_indicator,
                    amount,
                    balance,
                    status
                FROM Trade
                <where>
                    <!-- 계좌번호 조회 -->
                    <if test="accId != null and accId != ''">
                        acc_id LIKE #{accId} || '%'
                    </if>

                    <!-- 거래유형 조회 -->
                    <if test="tradeType != null and tradeType != ''">
                        AND trade_type LIKE #{tradeType}
                    </if>

                    <!-- 날짜 직접 입력 검색 -->
                    <if test="startDate != null and endDate != null">
                        AND trade_date BETWEEN #{startDate} AND #{endDate}
                    </if>
                </where>
                <!-- 정렬 기준 -->
                <choose>
                    <when test="sortOrder == 'latest'">
                        ORDER BY trade_date DESC
                    </when>
                    <when test="sortOrder == 'oldest'">
                        ORDER BY trade_date ASC
                    </when>
                </choose>
            )
        )
        WHERE rn BETWEEN #{criteria.amount} * (#{criteria.pageNum} - 1) + 1 AND #{criteria.amount} * #{criteria.pageNum}

    </select>

    <resultMap id="TradeInfoOfPerAccountMap" type="TradeInfoOfPerAccount">

        <result property="accId" column="acc_id" />
        <result property="tradeType" column="trade_type" />
        <result property="amount" column="amount" />
        <result property="status" column="status"/>
    </resultMap>

    <select id="getTotalSumOfTradeList" parameterType="TradeSearch" resultMap="TradeInfoOfPerAccountMap">
        SELECT
            acc_id,
            trade_type,
            amount,
            status
        FROM Trade
        <where>
            <!-- 계좌번호 조회 -->
            acc_id LIKE #{accId}
            <!-- status 조건: 'NOR' 또는 'RVK' -->
            AND (status = 'NOR' OR status = 'RVK')

            <!-- 거래유형 조회 (선택적) -->
            <if test="tradeType != null and tradeType != ''">
                AND trade_type LIKE #{tradeType}
            </if>

            <!-- 날짜 직접 입력 검색 (선택적) -->
            <if test="startDate != null and endDate != null">
                AND trade_date BETWEEN #{startDate} AND #{endDate}
            </if>


        </where>
    </select>

    <select id="getTradeCount" parameterType="TradeSearch" resultType="int">
        SELECT COUNT(*)
        FROM Trade
        <where>
            <if test="accId != null and !accId.equals('')">
                acc_id LIKE #{accId} || '%'
            </if>

            <if test="tradeType != null and !tradeType.equals('')">
                and trade_type LIKE #{tradeType}
            </if>

            <if test="startDate != null and endDate != null">
                and trade_date BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
    </select>

    <select id="findTradeByCashList" parameterType="BusinessDateAndEmployeeId">

        select trade_date, acc_id, trade_type, amount, e.name as "registrant_name", b.name as "branch_name" from trade t
        join employee e on t.registrant_id = e.id
        join branch b on t.branch_id = b.id
        where cash_indicator = 'TRUE' and t.registrant_id = #{employeeId} and trade_date = #{businessDate}

    </select>

    <select id="getNextTradeNumberVal">
        SELECT  trade_num_seq.NEXTVAL FROM dual
    </select>

    <insert id="createCashTrade" parameterType="TradeDetail">
        INSERT INTO Trade (id, registrant_id, acc_id, branch_id, trade_date, amount, balance, trade_type, status, cash_indicator, trade_number, registration_date, modification_date, modifier_id, version)
        VALUES (trade_seq.nextval, #{registrantId}, #{accId}, #{branchId}, #{tradeDate}, #{amount}, #{balance}, #{tradeType}, #{status}, #{cashIndicator}, #{tradeNumber}, #{registrationDate}, #{modificationDate}, #{modifierId}, #{version})
    </insert>

    <update id="updateCashTradeBalance" parameterType="TradeDetail">
        UPDATE Account
        SET balance = #{balance},
            modification_date = #{tradeDate},
            modifier_id = #{registrantId},
            version = version + 1
        WHERE id = #{accId}
    </update>

</mapper>
