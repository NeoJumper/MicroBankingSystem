<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.customer.mapper.CustomerMapper">

    <resultMap id="CustomerSearchInfoMap" type="CustomerSearchInfo">
        <id property="customerId" column="id" />
        <result property="customerName" column="name" />
        <result property="birthDate" column="birth_date" />
        <result property="phoneNumber" column="phone_number" />
        <result property="branchId" column="branch_id" />
        <result property="email" column="email" />
        <result property="address" column="address" />

    </resultMap>

    <select id="findCustomers" parameterType="CustomerSearch" resultMap="CustomerSearchInfoMap">
        SELECT *
        FROM (
        SELECT ROWNUM rn, id, name, birth_date, phone_number, branch_id, security_level, email,  address || detail_address as "address"
        FROM (
            SELECT id,name,birth_date,phone_number, branch_id, security_level,email ,  address, detail_address
            FROM customer
            <where>
                <if test="searchOption != null and !searchOption.equals('')">
                    AND ${searchOption} LIKE '%' || #{searchValue} || '%'
                </if>
            </where>
        )
        )
        <if test="criteria != null and !criteria.equals('')">
        WHERE rn BETWEEN #{criteria.amount} * (#{criteria.pageNum} - 1) + 1 AND #{criteria.amount} * #{criteria.pageNum}
        </if>
    </select>

    <select id="findCustomer" parameterType="Long">
        SELECT *
        FROM customer
        WHERE id = ${customerId}
    </select>

    <select id="getCustomerCount" parameterType="CustomerSearch">
        SELECT COUNT(*)
        FROM customer
        <where>
            <if test="searchOption != null and !searchOption.equals('')">
                AND ${searchOption} LIKE '%' || #{searchValue} || '%'
            </if>
        </where>
    </select>

    <insert id="insertCustomer" parameterType="CustomerCreate">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
            SELECT customer_seq.nextval FROM dual
        </selectKey>
        INSERT INTO Customer (id, branch_id, email, name,gender, phone_number, address, detail_address, identification_code, birth_date, security_level ,registrant_id, registration_date, version)
        VALUES (
        #{id},
        #{branchId},
        #{email},
        #{name},
        #{gender},
        #{phoneNumber},
        #{address},
        #{detailAddress},
        #{identificationCode},
        #{birthDate},
        '2등급',
        #{registrantId},
        SYSTIMESTAMP,
        1
        )
    </insert>



    <update id="updateCustomer" parameterType="CustomerUpdate">
        UPDATE Customer
        SET
            email = #{email},
            name = #{name},
            gender = #{gender},
            phone_number = #{phoneNumber},
            address = #{address},
            detail_address = #{detailAddress},
            identification_code = #{identificationCode},
            birth_date = #{birthDate},
            modifier_id = #{modifierId},
            modification_date = SYSTIMESTAMP,
            version = version + 1
        WHERE id = #{id}
    </update>

    <update id="updateSecurityLevelAndOtpCode" parameterType="map">
        UPDATE customer
        SET
        security_level = '1등급',
        otp_key = #{encodedKey}
        WHERE
        id = #{customerId}
    </update>
</mapper>
