<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.account_close.mapper.AccountCloseMapper">


    <resultMap id="closeAccountMap" type="CloseAccount">
        <id column="account_id" property="accountId" />
        <result column="account_status" property="accountStatus" />
        <result column="customer_name" property="customerName" />
        <result column="customer_id" property="customerId" />
        <result column="product_name" property="productName" />
        <result column="amount_date" property="amountDate" />
        <result column="account_pre_inter_rate" property="accountPreInterRate" />
        <result column="product_inter_rate" property="productInterRate" />
        <result column="account_bal" property="accountBal" />
        <result column="product_tax_rate" property="productTaxRate" />
    </resultMap>


<!--    해지 대상 계좌 상태 조회-->
    <select id="findCloseAccount" parameterType="java.lang.String" resultMap="closeAccountMap">
        SELECT
               a.id as account_id,
               a.status as account_status,
               c.name as customer_name,
               c.id as customer_id,
               p.name as product_name,
               a.start_date as amount_date,
               a.preferential_interest_rate as account_pre_inter_rate,
               p.interest_rate as product_inter_rate,
               a.balance as account_bal,
               p.tax_rate as product_tax_rate
        FROM Account a JOIN Customer c ON a.customer_id = c.id
                       JOIN Product p ON a.product_id = p.id
        WHERE a.id = #{accountId}
    </select>

<!--    해지 거래 등록-->
    <insert id="addCancelTrade" parameterType="CloseTrade">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
            SELECT trade_seq.nextval FROM dual
        </selectKey>
        INSERT INTO TRADE (id, acc_id, registrant_id, branch_id, trade_date, amount, balance, trade_type, status, cash_indicator, description, registration_date, trade_number, version)
        VALUES (#{id}, #{accId}, #{registrantId}, #{branchId}, #{businessDay}, #{amount}, #{balance}, #{tradeType}, 'NOR', 'TRUE', #{description}, SYSDATE, trade_num_seq.nextval, 1)
    </insert>

<!--    계좌 상태 변경-->
    <update id="updateStatus" parameterType="AccountStatus">
        UPDATE ACCOUNT
        SET
            status = #{status},
            balance = #{balance},
            modification_date = SYSDATE,
            modifier_id = #{modifierId},
            version = version + 1
            <if test="businessDay != null">
                , expire_date = #{businessDay}
            </if>
            <if test="businessDay == null">
                , expire_date = null
            </if>
        WHERE
            id = #{id}
    </update>

    <!--  해지 취소 매핑  -->
    <!--  이자 테이블 되돌리기  -->
    <select id="rollbackInterestSum" parameterType="AccountIdWithExpireDate" resultMap="interestSumMap">
        SELECT a.id AS account_id,
               sum(i.amount) AS amount_sum
        FROM Account a
                 JOIN Interest i ON  i.acc_id = a.id
        WHERE a.id = #{accountId}
          AND i.modifier_date = #{expireDate}
        GROUP BY a.id
    </select>


    <select id="findExpireDateById" parameterType="java.lang.String" resultType="java.sql.Timestamp">
        SELECT expire_date
        FROM ACCOUNT
        WHERE id = #{id}
    </select>

    <select id="rollbackAmount" parameterType="AccountIdWithExpireDate" resultType="java.math.BigDecimal">
        SELECT amount
        FROM TRADE
        WHERE acc_id = #{accountId} AND registration_date = #{expireDate} AND trade_type = 'CLOSE'
    </select>

</mapper>
