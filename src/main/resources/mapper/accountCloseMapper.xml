<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcc.banking.domain.account_close.mapper.AccountCloseMapper">

    <resultMap id="interestSumMap" type="InterestSum">
        <id column="account_id" property="accountId" />
        <result column="interest_rate_sum" property="interestRateSum" />
        <result column="amount_sum" property="amountSum" />
    </resultMap>
    <resultMap id="closeAccountMap" type="CloseAccount">
        <id column="account_id" property="accountId" />
        <result column="account_status" property="accountStatus" />
        <result column="customer_name" property="customerName" />
        <result column="customer_id" property="customerId" />
        <result column="product_name" property="productName" />
        <result column="amount_date" property="amountDate" />
        <result column="account_pre_inter_rate" property="accountPreInterRate" />
        <result column="account_bal" property="accountBal" />
        <result column="product_tax_rate" property="productTaxRate" />
    </resultMap>

    <select id="findInterestSum" parameterType="java.lang.String" resultMap="interestSumMap">
        SELECT a.id as account_id, sum(i.interest_rate) as interest_rate_sum, sum(i.amount) as amount_sum
        FROM Account a JOIN Interest i ON  i.acc_id = a.id
        WHERE a.id = #{accountId}
        GROUP BY a.id
    </select>

    <select id="findCloseAccount" parameterType="java.lang.String" resultMap="closeAccountMap">
        SELECT
               a.id as account_id,
               a.status as account_status,
               c.name as customer_name,
               c.id as customer_id,
               p.name as product_name,
               a.start_date as amount_date,
               a.preferential_interest_rate as account_pre_inter_rate,
               a.balance as account_bal,
               p.tax_rate as product_tax_rate
        FROM Account a JOIN Customer c ON a.customer_id = c.id
                       JOIN Product p ON a.product_id = p.id
        WHERE a.id = #{accountId}
    </select>

    <insert id="addCancelTrade" parameterType="CloseTrade">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
            SELECT trade_seq.nextval FROM dual
        </selectKey>
        INSERT INTO TRADE (id, acc_id, registrant_id, branch_id, trade_date, amount, balance, trade_type, status, cash_indicator, description, trade_number)
        VALUES (#{id}, #{accId}, #{registrantId}, #{branchId}, SYSTIMESTAMP, #{amount}, #{balance}, #{tradeType}, 'NOR', 'TRUE', #{description}, trade_num_seq.nextval)
    </insert>

    <update id="updateStatus" parameterType="AccountStatus">
        UPDATE ACCOUNT
        SET
            status = #{status},
            expire_date = SYSTIMESTAMP,
            balance = #{balance},
            modification_date = SYSTIMESTAMP,
            modifier_id = #{modifierId}
        WHERE
            id = #{id}
    </update>
</mapper>
